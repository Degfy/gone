// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package testdata is a generated GoMock package.
package testdata

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTestInterface is a mock of TestInterface interface.
type MockTestInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTestInterfaceMockRecorder
}

// MockTestInterfaceMockRecorder is the mock recorder for MockTestInterface.
type MockTestInterfaceMockRecorder struct {
	mock *MockTestInterface
}

// NewMockTestInterface creates a new mock instance.
func NewMockTestInterface(ctrl *gomock.Controller) *MockTestInterface {
	mock := &MockTestInterface{ctrl: ctrl}
	mock.recorder = &MockTestInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTestInterface) EXPECT() *MockTestInterfaceMockRecorder {
	return m.recorder
}

// DoSomeThing mocks base method.
func (m *MockTestInterface) DoSomeThing(bool bool) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoSomeThing", bool)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DoSomeThing indicates an expected call of DoSomeThing.
func (mr *MockTestInterfaceMockRecorder) DoSomeThing(bool interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoSomeThing", reflect.TypeOf((*MockTestInterface)(nil).DoSomeThing), bool)
}

// GetSomeThing mocks base method.
func (m *MockTestInterface) GetSomeThing() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSomeThing")
	ret0, _ := ret[0].(error)
	return ret0
}

// GetSomeThing indicates an expected call of GetSomeThing.
func (mr *MockTestInterfaceMockRecorder) GetSomeThing() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSomeThing", reflect.TypeOf((*MockTestInterface)(nil).GetSomeThing))
}
